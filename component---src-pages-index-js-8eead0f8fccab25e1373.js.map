{"version":3,"file":"component---src-pages-index-js-8eead0f8fccab25e1373.js","mappings":"uQAAaA,EAET,uQC6BJ,MA7BA,SAAe,GAAY,IAAVC,EAAK,EAALA,MAEf,OADAC,QAAQC,IAAI,8BAA+BF,EAAMG,cAAcC,SAE7D,qBAAGC,UAAU,aAAaC,KAAMN,EAAMG,cAAcC,SAClD,uBAAKC,UAAU,mBACb,uBACEE,IAAKP,EAAMQ,MAAMC,OAAO,GAAGC,IAC3BC,IAAQX,EAAMY,KAAI,eAClBP,UAAU,gBAEZ,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,cAAcL,EAAMY,MACnC,uBAAKP,UAAU,iBACZL,EAAMa,SACLb,EAAMa,QAAQC,KAAI,SAACC,EAAQC,GACzB,OACE,wBAAMC,IAAKD,GACRD,EAAOH,KACPI,EAAQhB,EAAMa,QAAQK,OAAS,EAAI,KAAO,GAGjD,OAMd,ECgBA,MAxCA,WAA0B,SACTC,EAAY,EAAD,iDASzB,OATyB,oBAA1B,WAA2BC,EAAUC,EAAQC,GAAI,uFAC7BC,MAAM,2BAA2BH,EAAY,CAC7DI,QAAS,CACPC,cAAc,UAAW1B,GAE3BsB,OAAAA,EACAC,KAAMI,KAAKC,UAAUL,KACpB,KAAD,EANO,OAAHM,EAAG,gBAOIA,EAAIC,OAAO,KAAD,+EACxB,sBAED,IAAMC,EAAY,mCAAG,8FAGXX,EAAY,gDAAiD,OAAM,uCACzEY,OAAK,2CACR,kBALiB,mCAOlB,GAAkCC,EAAAA,EAAAA,YAA3BC,EAAS,KAAEC,EAAY,KAQ9B,OANAC,EAAAA,EAAAA,YAAS,iBAAC,oGACmBL,IAAe,KAAD,EAAnCM,EAAY,OAClBnC,QAAQC,IAAI,eAAgBkC,GAC5BF,EAAaE,GAAc,2CAC1B,IAGD,gCACE,iEACA,uBAAK/B,UAAU,cACZ4B,GACCA,EAAUnB,KAAI,SAACd,GACb,OAAO,gBAAC,EAAK,CAACA,MAAOA,GACvB,KAIV,EC7Be,SAASqC,IACtB,OACE,gCACE,gBAAC,KAAG,CAACC,MAAM,uCACX,gBAAC,KAAI,CAACC,0BAAwB,GAC5B,gBAAC,KAAW,CAACC,UAAU,SACvB,gBAAC,KAAe,CACdA,UAAU,WACVC,QAAQ,kBACRC,QAAS,CAAC,YAEZ,gBAAC,KAAO,KACN,gBAAC,EAAa,OAGhB,gBAAC,KAAY,CAACF,UAAU,QAAQC,QAAQ,cAOhD,C","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./config/spotify-config.js","webpack://gatsby-starter-portfolio-minimal-theme/./components/track.js","webpack://gatsby-starter-portfolio-minimal-theme/./components/spotify-widget.js","webpack://gatsby-starter-portfolio-minimal-theme/./src/pages/index.js"],"sourcesContent":["export const config = {\n  token:\n    'BQABN27SzSHiTFI5rpSJR3JEOicERb-KBhqJMTkWYZo22HrxE9A4GPCuO4_LhK5Gid3_pv2WDQgkg8Ffkfon7r8sZUPRXDpMXsdRRm6nPXNMZQJJLhWtsunIQMZHCadoWY3QKyh0j8-QxM7DwF48rU5xBIe7c4WGcgtilIrVa4ZsXlcE4sA_f_diM4BsTluUctanMe0MaxoFKnu2eYGHkSzc_0BYmqvZ4JYfjtiYc9Pri7LpKRD-bGt-LYPlPy42n1YL',\n};\n","import React from 'react';\nimport './trackStyles.css';\nfunction Track({ track }) {\n  console.log('track.external_urls.spotify', track.external_urls.spotify);\n  return (\n    <a className='track-link' href={track.external_urls.spotify}>\n      <div className='track-container'>\n        <img\n          src={track.album.images[2].url}\n          alt={`${track.name} album cover`}\n          className='track-image'\n        />\n        <div className='track-details'>\n          <div className='track-name'>{track.name}</div>\n          <div className='track-artists'>\n            {track.artists &&\n              track.artists.map((artist, index) => {\n                return (\n                  <span key={index}>\n                    {artist.name}\n                    {index < track.artists.length - 1 ? ', ' : ''}\n                  </span>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </a>\n  );\n}\n\nexport default Track;\n","import React, { useEffect, useState } from 'react';\nimport { config } from '../config/spotify-config';\nimport Track from './track';\nimport './trackStyles.css';\n\nfunction SpotifyWidget() {\n  async function fetchWebApi(endpoint, method, body) {\n    const res = await fetch(`https://api.spotify.com/${endpoint}`, {\n      headers: {\n        Authorization: `Bearer ${config.token}`,\n      },\n      method,\n      body: JSON.stringify(body),\n    });\n    return await res.json();\n  }\n\n  const getTopTracks = async () => {\n    // Endpoint reference : https://developer.spotify.com/documentation/web-api/reference/get-users-top-artists-and-tracks\n    return (\n      await fetchWebApi('v1/me/top/tracks?time_range=long_term&limit=5', 'GET')\n    ).items;\n  };\n\n  const [topTracks, setTopTracks] = useState();\n\n  useEffect(async () => {\n    const topTracksRes = await getTopTracks();\n    console.log('topTracksRes', topTracksRes);\n    setTopTracks(topTracksRes);\n  }, []);\n\n  return (\n    <>\n      <h1>Some of my favorite songs right now</h1>\n      <div className='track-list'>\n        {topTracks &&\n          topTracks.map((track) => {\n            return <Track track={track} />;\n          })}\n      </div>\n    </>\n  );\n}\n\nexport default SpotifyWidget;\n","import React from 'react';\nimport {\n  AboutSection,\n  ArticlesSection,\n  ContactSection,\n  HeroSection,\n  InterestsSection,\n  Page,\n  ProjectsSection,\n  Section,\n  Seo,\n} from 'gatsby-theme-portfolio-minimal';\nimport SpotifyWidget from '../../components/spotify-widget';\n\nexport default function IndexPage() {\n  return (\n    <>\n      <Seo title='Siman Shrestha - Software Engineer' />\n      <Page useSplashScreenAnimation>\n        <HeroSection sectionId='hero' />\n        <ArticlesSection\n          sectionId='articles'\n          heading='Latest Articles'\n          sources={['Medium']}\n        />\n        <Section>\n          <SpotifyWidget />\n        </Section>\n\n        <AboutSection sectionId='about' heading='About Me' />\n        {/* <InterestsSection sectionId='details' heading='Details' /> */}\n        {/* <ProjectsSection sectionId='features' heading='Built-in Features' /> */}\n        {/* <ContactSection sectionId='github' heading='Issues?' /> */}\n      </Page>\n    </>\n  );\n}\n"],"names":["config","track","console","log","external_urls","spotify","className","href","src","album","images","url","alt","name","artists","map","artist","index","key","length","fetchWebApi","endpoint","method","body","fetch","headers","Authorization","JSON","stringify","res","json","getTopTracks","items","useState","topTracks","setTopTracks","useEffect","topTracksRes","IndexPage","title","useSplashScreenAnimation","sectionId","heading","sources"],"sourceRoot":""}